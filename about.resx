<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODdhQABAAHcAACH/C05FVFNDQVBFMi4wAwEAAAAh+QQJZAAAACwAAAAAQABAAIMAAAAdFwkwJhGu
        mGjhyJL///8AAADRzcT/7+9dSyRoVCjo3t4AAAAAAAAAAAAAAAAE/xDISau9OOvNu/9gKI5kFghoipYs
        d6ppK2MvLMw48A5E7/evHGv3+wWFJCKhwOwxCzfkSPl0MqPSELW5vGY/NRSvCFx9O2HBmHw8b9LrYttt
        QhnuBjIBz6fT7Hw/B3x9fhYvhAYHg4OJBoYWjneLipKQFZJ8jYmXFGOJlJt3Y50Tn4SUiaSlAKeojqul
        rpl4sZ2zdwi6uny2l7i7u709rK16CATBwwTFcT7IyrXErM490MLSzMUShMG82dvc3dGj09u0hL6l6Mvh
        AOyc4QkK9PX29nju8/f89Oqd+/rd+3cpoMB6BCEZPKjA3YR9GSA6BCDxQkV99CJmnHixQsdtH2YfbnQY
        UkJJWeYsJLyVssLKXy09xWw2U8JLSAlvGspZE6W2Czr98PzpzpXKHvnCGXWJ9E7Rpo+Y7nEaLtGTCVaZ
        FMtaACuhq6y4euUDttSCJ2i7SjibVisrtm0nwE07sa7du3hnRAAAIfkECWQAAAAsFQAFABgANwCDAAAA
        HRcJMCYRrpho4ciS////AAAA0c3E/+/vXUskaFQo6N7eAAAAAAAAAAAAAAAABP8QyBmEvXbqTTHmoFR5
        WdgJA6Gu6miOKbu6IawW+I0LrxXjBV2BV/MJhUTN6BKTEWhKT1MGPTGdrVJUYOgasN7wKfwlHFRk7zjt
        PbAn7Lbh4E7D4/N5nTyJpeldewYxfWhkgmGEEn54ZIoAjGEIk5OJKoUEZJSUlgSYMggEm52fLKGjXo9T
        K6ecqZcbmpsIpLGyrl2Pd42vnra8ubAaCQrFxsfHahvEyM3FysPOzroSzNLH1ADW18XZzCbfIeEg4xzl
        y8Xg6eLr5O3m7+gK6vMh2Zgm94vCHPqQ/Bv8CQSoYaAvEAbzEcRnb+G+TF36GTIgESLFgBMrQsO0UUIa
        ILshvID0SGYkgI84QnYxibLAhAVAYrqUAFNmSpo2bwKoaTMCADs=
</value>
  </data>
</root>